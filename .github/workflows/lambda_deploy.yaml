name: AWS Lambda Deploy

on:
  push:
    branches:
      - develop
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.11'

      - name: Install dependencies for Lambda Layer
        run: |
          mkdir -p layer/python
          pip install -r requirements.txt -t layer/python
          cd layer && zip -r ../layer.zip . && cd ..

      - name: Deploy Lambda Layer
        id: layer
        run: |
          LAYER_ARN=$(aws lambda publish-layer-version \
            --layer-name ai-paper-summarizer-layer \
            --description "Dependencies for ai-paper-summarizer Lambda function" \
            --zip-file fileb://layer.zip \
            --compatible-runtimes python3.10 \
            --query 'LayerVersionArn' --output text)
          echo "LAYER_ARN=$LAYER_ARN" >> $GITHUB_ENV

      - name: Package and Deploy Lambda Function Code
        run: |
          zip -r package.zip lambda_module
          aws lambda update-function-code \
            --function-name ai-paper-summarizer \
            --zip-file fileb://package.zip \
            --publish

      - name: Update Lambda Function with Layer
        run: |
          aws lambda update-function-configuration \
            --function-name ai-paper-summarizer \
            --layers ${LAYER_ARN}

  slack_notification:
    if: ${{ always() }}
    needs: deploy
    uses: ./.github/workflows/slack_notification.yaml
    with:
      lambda-function-name: ai-paper-summarizer
      commit-id: ${{ github.sha }}
      status: ${{ needs.deploy.outputs.outcome }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
